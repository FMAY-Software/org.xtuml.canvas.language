/*
 * generated by Xtext 2.22.0
 */
grammar InternalCanvas;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtuml.canvas.language.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtuml.canvas.language.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtuml.canvas.language.services.CanvasGrammarAccess;

}
@parser::members {
	private CanvasGrammarAccess grammarAccess;

	public void setGrammarAccess(CanvasGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemanticModel
entryRuleSemanticModel
:
{ before(grammarAccess.getSemanticModelRule()); }
	 ruleSemanticModel
{ after(grammarAccess.getSemanticModelRule()); } 
	 EOF 
;

// Rule SemanticModel
ruleSemanticModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticModelAccess().getGroup()); }
		(rule__SemanticModel__Group__0)
		{ after(grammarAccess.getSemanticModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelProperties
entryRuleModelProperties
:
{ before(grammarAccess.getModelPropertiesRule()); }
	 ruleModelProperties
{ after(grammarAccess.getModelPropertiesRule()); } 
	 EOF 
;

// Rule ModelProperties
ruleModelProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getGroup()); }
		(rule__ModelProperties__Group__0)
		{ after(grammarAccess.getModelPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphicalElement
entryRuleGraphicalElement
:
{ before(grammarAccess.getGraphicalElementRule()); }
	 ruleGraphicalElement
{ after(grammarAccess.getGraphicalElementRule()); } 
	 EOF 
;

// Rule GraphicalElement
ruleGraphicalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphicalElementAccess().getAlternatives()); }
		(rule__GraphicalElement__Alternatives)
		{ after(grammarAccess.getGraphicalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapes
entryRuleShapes
:
{ before(grammarAccess.getShapesRule()); }
	 ruleShapes
{ after(grammarAccess.getShapesRule()); } 
	 EOF 
;

// Rule Shapes
ruleShapes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapesAccess().getGroup()); }
		(rule__Shapes__Group__0)
		{ after(grammarAccess.getShapesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShape
entryRuleShape
:
{ before(grammarAccess.getShapeRule()); }
	 ruleShape
{ after(grammarAccess.getShapeRule()); } 
	 EOF 
;

// Rule Shape
ruleShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAccess().getGroup()); }
		(rule__Shape__Group__0)
		{ after(grammarAccess.getShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatingTexts
entryRuleFloatingTexts
:
{ before(grammarAccess.getFloatingTextsRule()); }
	 ruleFloatingTexts
{ after(grammarAccess.getFloatingTextsRule()); } 
	 EOF 
;

// Rule FloatingTexts
ruleFloatingTexts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatingTextsAccess().getGroup()); }
		(rule__FloatingTexts__Group__0)
		{ after(grammarAccess.getFloatingTextsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatingText
entryRuleFloatingText
:
{ before(grammarAccess.getFloatingTextRule()); }
	 ruleFloatingText
{ after(grammarAccess.getFloatingTextRule()); } 
	 EOF 
;

// Rule FloatingText
ruleFloatingText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatingTextAccess().getGroup()); }
		(rule__FloatingText__Group__0)
		{ after(grammarAccess.getFloatingTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumEnd
entryRuleEnumEnd
:
{ before(grammarAccess.getEnumEndRule()); }
	 ruleEnumEnd
{ after(grammarAccess.getEnumEndRule()); } 
	 EOF 
;

// Rule EnumEnd
ruleEnumEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumEndAccess().getAlternatives()); }
		(rule__EnumEnd__Alternatives)
		{ after(grammarAccess.getEnumEndAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeProps
entryRuleShapeProps
:
{ before(grammarAccess.getShapePropsRule()); }
	 ruleShapeProps
{ after(grammarAccess.getShapePropsRule()); } 
	 EOF 
;

// Rule ShapeProps
ruleShapeProps 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapePropsAccess().getGroup()); }
		(rule__ShapeProps__Group__0)
		{ after(grammarAccess.getShapePropsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getGroup()); }
		(rule__Container__Group__0)
		{ after(grammarAccess.getContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getGroup()); }
		(rule__Color__Group__0)
		{ after(grammarAccess.getColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectors
entryRuleConnectors
:
{ before(grammarAccess.getConnectorsRule()); }
	 ruleConnectors
{ after(grammarAccess.getConnectorsRule()); } 
	 EOF 
;

// Rule Connectors
ruleConnectors 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorsAccess().getGroup()); }
		(rule__Connectors__Group__0)
		{ after(grammarAccess.getConnectorsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnchors
entryRuleAnchors
:
{ before(grammarAccess.getAnchorsRule()); }
	 ruleAnchors
{ after(grammarAccess.getAnchorsRule()); } 
	 EOF 
;

// Rule Anchors
ruleAnchors 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnchorsAccess().getGroup()); }
		(rule__Anchors__Group__0)
		{ after(grammarAccess.getAnchorsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartAnchor
entryRuleStartAnchor
:
{ before(grammarAccess.getStartAnchorRule()); }
	 ruleStartAnchor
{ after(grammarAccess.getStartAnchorRule()); } 
	 EOF 
;

// Rule StartAnchor
ruleStartAnchor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartAnchorAccess().getGroup()); }
		(rule__StartAnchor__Group__0)
		{ after(grammarAccess.getStartAnchorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndAnchor
entryRuleEndAnchor
:
{ before(grammarAccess.getEndAnchorRule()); }
	 ruleEndAnchor
{ after(grammarAccess.getEndAnchorRule()); } 
	 EOF 
;

// Rule EndAnchor
ruleEndAnchor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAnchorAccess().getGroup()); }
		(rule__EndAnchor__Group__0)
		{ after(grammarAccess.getEndAnchorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnchor
entryRuleAnchor
:
{ before(grammarAccess.getAnchorRule()); }
	 ruleAnchor
{ after(grammarAccess.getAnchorRule()); } 
	 EOF 
;

// Rule Anchor
ruleAnchor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnchorAccess().getAlternatives()); }
		(rule__Anchor__Alternatives)
		{ after(grammarAccess.getAnchorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeAnchorElement
entryRuleShapeAnchorElement
:
{ before(grammarAccess.getShapeAnchorElementRule()); }
	 ruleShapeAnchorElement
{ after(grammarAccess.getShapeAnchorElementRule()); } 
	 EOF 
;

// Rule ShapeAnchorElement
ruleShapeAnchorElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAnchorElementAccess().getGroup()); }
		(rule__ShapeAnchorElement__Group__0)
		{ after(grammarAccess.getShapeAnchorElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorAnchorElement
entryRuleConnectorAnchorElement
:
{ before(grammarAccess.getConnectorAnchorElementRule()); }
	 ruleConnectorAnchorElement
{ after(grammarAccess.getConnectorAnchorElementRule()); } 
	 EOF 
;

// Rule ConnectorAnchorElement
ruleConnectorAnchorElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAnchorElementAccess().getGroup()); }
		(rule__ConnectorAnchorElement__Group__0)
		{ after(grammarAccess.getConnectorAnchorElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorProps
entryRuleConnectorProps
:
{ before(grammarAccess.getConnectorPropsRule()); }
	 ruleConnectorProps
{ after(grammarAccess.getConnectorPropsRule()); } 
	 EOF 
;

// Rule ConnectorProps
ruleConnectorProps 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorPropsAccess().getGroup()); }
		(rule__ConnectorProps__Group__0)
		{ after(grammarAccess.getConnectorPropsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolyline
entryRulePolyline
:
{ before(grammarAccess.getPolylineRule()); }
	 rulePolyline
{ after(grammarAccess.getPolylineRule()); } 
	 EOF 
;

// Rule Polyline
rulePolyline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolylineAccess().getGroup()); }
		(rule__Polyline__Group__0)
		{ after(grammarAccess.getPolylineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSegment
entryRuleSegment
:
{ before(grammarAccess.getSegmentRule()); }
	 ruleSegment
{ after(grammarAccess.getSegmentRule()); } 
	 EOF 
;

// Rule Segment
ruleSegment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSegmentAccess().getGroup()); }
		(rule__Segment__Group__0)
		{ after(grammarAccess.getSegmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRectangle
entryRuleRectangle
:
{ before(grammarAccess.getRectangleRule()); }
	 ruleRectangle
{ after(grammarAccess.getRectangleRule()); } 
	 EOF 
;

// Rule Rectangle
ruleRectangle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRectangleAccess().getGroup()); }
		(rule__Rectangle__Group__0)
		{ after(grammarAccess.getRectangleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGroup_1_0()); }
		(rule__Model__Group_1_0__0)
		{ after(grammarAccess.getModelAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getRenderKeyword_1_1()); }
		'render:'
		{ after(grammarAccess.getModelAccess().getRenderKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getGroup_0_0()); }
		(rule__ModelProperties__Group_0_0__0)
		{ after(grammarAccess.getModelPropertiesAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelPropertiesAccess().getPropertiesKeyword_0_1()); }
		'properties:'
		{ after(grammarAccess.getModelPropertiesAccess().getPropertiesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getGroup_1_0()); }
		(rule__ModelProperties__Group_1_0__0)
		{ after(grammarAccess.getModelPropertiesAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelPropertiesAccess().getViewportKeyword_1_1()); }
		'viewport:'
		{ after(grammarAccess.getModelPropertiesAccess().getViewportKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalElementAccess().getShapesParserRuleCall_0()); }
		ruleShapes
		{ after(grammarAccess.getGraphicalElementAccess().getShapesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalElementAccess().getConnectorsParserRuleCall_1()); }
		ruleConnectors
		{ after(grammarAccess.getGraphicalElementAccess().getConnectorsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapesAccess().getGroup_1_0()); }
		(rule__Shapes__Group_1_0__0)
		{ after(grammarAccess.getShapesAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapesAccess().getShapesKeyword_1_1()); }
		'shapes:'
		{ after(grammarAccess.getShapesAccess().getShapesKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getGroup_1_0()); }
		(rule__Shape__Group_1_0__0)
		{ after(grammarAccess.getShapeAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAccess().getShapeKeyword_1_1()); }
		'shape:'
		{ after(grammarAccess.getShapeAccess().getShapeKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getGroup_6_0()); }
		(rule__Shape__Group_6_0__0)
		{ after(grammarAccess.getShapeAccess().getGroup_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAccess().getRenderKeyword_6_1()); }
		'render:'
		{ after(grammarAccess.getShapeAccess().getRenderKeyword_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextsAccess().getGroup_1_0()); }
		(rule__FloatingTexts__Group_1_0__0)
		{ after(grammarAccess.getFloatingTextsAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatingTextsAccess().getTextsKeyword_1_1()); }
		'texts:'
		{ after(grammarAccess.getFloatingTextsAccess().getTextsKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextAccess().getGroup_1_0()); }
		(rule__FloatingText__Group_1_0__0)
		{ after(grammarAccess.getFloatingTextAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatingTextAccess().getTextKeyword_1_1()); }
		'text:'
		{ after(grammarAccess.getFloatingTextAccess().getTextKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumEndAccess().getStartKeyword_0()); }
		'start'
		{ after(grammarAccess.getEnumEndAccess().getStartKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getEndKeyword_1()); }
		'end'
		{ after(grammarAccess.getEnumEndAccess().getEndKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getMiddleKeyword_2()); }
		'middle'
		{ after(grammarAccess.getEnumEndAccess().getMiddleKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getEnd_fixedKeyword_3()); }
		'end_fixed'
		{ after(grammarAccess.getEnumEndAccess().getEnd_fixedKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getStart_fixedKeyword_4()); }
		'start_fixed'
		{ after(grammarAccess.getEnumEndAccess().getStart_fixedKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getNoneKeyword_5()); }
		'none'
		{ after(grammarAccess.getEnumEndAccess().getNoneKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getFloatingKeyword_6()); }
		'floating'
		{ after(grammarAccess.getEnumEndAccess().getFloatingKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getAdditionalKeyword_7()); }
		'additional'
		{ after(grammarAccess.getEnumEndAccess().getAdditionalKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapePropsAccess().getGroup_1_0()); }
		(rule__ShapeProps__Group_1_0__0)
		{ after(grammarAccess.getShapePropsAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapePropsAccess().getPropertiesKeyword_1_1()); }
		'properties:'
		{ after(grammarAccess.getShapePropsAccess().getPropertiesKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getTrueKeyword_2_0()); }
		'true'
		{ after(grammarAccess.getContainerAccess().getTrueKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainerAccess().getFalseKeyword_2_1()); }
		'false'
		{ after(grammarAccess.getContainerAccess().getFalseKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorsAccess().getGroup_1_0()); }
		(rule__Connectors__Group_1_0__0)
		{ after(grammarAccess.getConnectorsAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorsAccess().getConnectorsKeyword_1_1()); }
		'connectors:'
		{ after(grammarAccess.getConnectorsAccess().getConnectorsKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup_0_0()); }
		(rule__Connector__Group_0_0__0)
		{ after(grammarAccess.getConnectorAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorAccess().getConnectorKeyword_0_1()); }
		'connector:'
		{ after(grammarAccess.getConnectorAccess().getConnectorKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup_6_0()); }
		(rule__Connector__Group_6_0__0)
		{ after(grammarAccess.getConnectorAccess().getGroup_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorAccess().getRenderKeyword_6_1()); }
		'render:'
		{ after(grammarAccess.getConnectorAccess().getRenderKeyword_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorsAccess().getGroup_0_0()); }
		(rule__Anchors__Group_0_0__0)
		{ after(grammarAccess.getAnchorsAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnchorsAccess().getAnchorsKeyword_0_1()); }
		'anchors:'
		{ after(grammarAccess.getAnchorsAccess().getAnchorsKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAnchorAccess().getGroup_0_0()); }
		(rule__StartAnchor__Group_0_0__0)
		{ after(grammarAccess.getStartAnchorAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStartAnchorAccess().getStartKeyword_0_1()); }
		'start:'
		{ after(grammarAccess.getStartAnchorAccess().getStartKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAnchorAccess().getGroup_0_0()); }
		(rule__EndAnchor__Group_0_0__0)
		{ after(grammarAccess.getEndAnchorAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEndAnchorAccess().getEndKeyword_0_1()); }
		'end'
		{ after(grammarAccess.getEndAnchorAccess().getEndKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorAccess().getShapeAnchorElementParserRuleCall_0()); }
		ruleShapeAnchorElement
		{ after(grammarAccess.getAnchorAccess().getShapeAnchorElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnchorAccess().getConnectorAnchorElementParserRuleCall_1()); }
		ruleConnectorAnchorElement
		{ after(grammarAccess.getAnchorAccess().getConnectorAnchorElementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAnchorElementAccess().getGroup_0_0()); }
		(rule__ShapeAnchorElement__Group_0_0__0)
		{ after(grammarAccess.getShapeAnchorElementAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAnchorElementAccess().getShapeAnchorKeyword_0_1()); }
		'shapeAnchor:'
		{ after(grammarAccess.getShapeAnchorElementAccess().getShapeAnchorKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAnchorElementAccess().getGroup_0_0()); }
		(rule__ConnectorAnchorElement__Group_0_0__0)
		{ after(grammarAccess.getConnectorAnchorElementAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorAnchorElementAccess().getSegmentAnchorKeyword_0_1()); }
		'segmentAnchor:'
		{ after(grammarAccess.getConnectorAnchorElementAccess().getSegmentAnchorKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorPropsAccess().getGroup_1_0()); }
		(rule__ConnectorProps__Group_1_0__0)
		{ after(grammarAccess.getConnectorPropsAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorPropsAccess().getPropertiesKeyword_1_1()); }
		'properties:'
		{ after(grammarAccess.getConnectorPropsAccess().getPropertiesKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolylineAccess().getGroup_1_0()); }
		(rule__Polyline__Group_1_0__0)
		{ after(grammarAccess.getPolylineAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPolylineAccess().getPolylineKeyword_1_1()); }
		'polyline:'
		{ after(grammarAccess.getPolylineAccess().getPolylineKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSegmentAccess().getGroup_0_0()); }
		(rule__Segment__Group_0_0__0)
		{ after(grammarAccess.getSegmentAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSegmentAccess().getSegmentKeyword_0_1()); }
		'segment:'
		{ after(grammarAccess.getSegmentAccess().getSegmentKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getGroup_0_0()); }
		(rule__Rectangle__Group_0_0__0)
		{ after(grammarAccess.getRectangleAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRectangleAccess().getRectangleKeyword_0_1()); }
		'rectangle:'
		{ after(grammarAccess.getRectangleAccess().getRectangleKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemanticsAssignment_0()); }
	(rule__Model__SemanticsAssignment_0)*
	{ after(grammarAccess.getModelAccess().getSemanticsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_1()); }
	(rule__Model__Alternatives_1)
	{ after(grammarAccess.getModelAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRepresentsAssignment_2()); }
	(rule__Model__RepresentsAssignment_2)
	{ after(grammarAccess.getModelAccess().getRepresentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPropertiesAssignment_3()); }
	(rule__Model__PropertiesAssignment_3)?
	{ after(grammarAccess.getModelAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_4()); }
	(rule__Model__ElementsAssignment_4)*
	{ after(grammarAccess.getModelAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1_0__0__Impl
	rule__Model__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRenderKeyword_1_0_0()); }
	'render'
	{ after(grammarAccess.getModelAccess().getRenderKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getModelAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticModel__Group__0__Impl
	rule__SemanticModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticModelAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getSemanticModelAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticModelAccess().getImportURIAssignment_1()); }
	(rule__SemanticModel__ImportURIAssignment_1)
	{ after(grammarAccess.getSemanticModelAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__0__Impl
	rule__ModelProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getAlternatives_0()); }
	(rule__ModelProperties__Alternatives_0)
	{ after(grammarAccess.getModelPropertiesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__1__Impl
	rule__ModelProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getAlternatives_1()); }
	(rule__ModelProperties__Alternatives_1)
	{ after(grammarAccess.getModelPropertiesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__2__Impl
	rule__ModelProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getPointAssignment_2()); }
	(rule__ModelProperties__PointAssignment_2)
	{ after(grammarAccess.getModelPropertiesAccess().getPointAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__3__Impl
	rule__ModelProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getZoomKeyword_3()); }
	'zoom'
	{ after(grammarAccess.getModelPropertiesAccess().getZoomKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getZoomAssignment_4()); }
	(rule__ModelProperties__ZoomAssignment_4)
	{ after(grammarAccess.getModelPropertiesAccess().getZoomAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperties__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group_0_0__0__Impl
	rule__ModelProperties__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getPropertiesKeyword_0_0_0()); }
	'properties'
	{ after(grammarAccess.getModelPropertiesAccess().getPropertiesKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getModelPropertiesAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperties__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group_1_0__0__Impl
	rule__ModelProperties__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getViewportKeyword_1_0_0()); }
	'viewport'
	{ after(grammarAccess.getModelPropertiesAccess().getViewportKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getModelPropertiesAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shapes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__0__Impl
	rule__Shapes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getShapesAction_0()); }
	()
	{ after(grammarAccess.getShapesAccess().getShapesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__1__Impl
	rule__Shapes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getAlternatives_1()); }
	(rule__Shapes__Alternatives_1)
	{ after(grammarAccess.getShapesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getShapesAssignment_2()); }
	(rule__Shapes__ShapesAssignment_2)*
	{ after(grammarAccess.getShapesAccess().getShapesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shapes__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group_1_0__0__Impl
	rule__Shapes__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getShapesKeyword_1_0_0()); }
	'shapes'
	{ after(grammarAccess.getShapesAccess().getShapesKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getShapesAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__0__Impl
	rule__Shape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getShapeAction_0()); }
	()
	{ after(grammarAccess.getShapeAccess().getShapeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__1__Impl
	rule__Shape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getAlternatives_1()); }
	(rule__Shape__Alternatives_1)
	{ after(grammarAccess.getShapeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__2__Impl
	rule__Shape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getNameAssignment_2()); }
	(rule__Shape__NameAssignment_2)
	{ after(grammarAccess.getShapeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__3__Impl
	rule__Shape__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getPropsAssignment_3()); }
	(rule__Shape__PropsAssignment_3)?
	{ after(grammarAccess.getShapeAccess().getPropsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__4__Impl
	rule__Shape__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getRectAssignment_4()); }
	(rule__Shape__RectAssignment_4)
	{ after(grammarAccess.getShapeAccess().getRectAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__5__Impl
	rule__Shape__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getTextAssignment_5()); }
	(rule__Shape__TextAssignment_5)?
	{ after(grammarAccess.getShapeAccess().getTextAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__6__Impl
	rule__Shape__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getAlternatives_6()); }
	(rule__Shape__Alternatives_6)
	{ after(grammarAccess.getShapeAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getRepresentsAssignment_7()); }
	(rule__Shape__RepresentsAssignment_7)
	{ after(grammarAccess.getShapeAccess().getRepresentsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shape__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_1_0__0__Impl
	rule__Shape__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getShapeKeyword_1_0_0()); }
	'shape'
	{ after(grammarAccess.getShapeAccess().getShapeKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getShapeAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shape__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_6_0__0__Impl
	rule__Shape__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getRenderKeyword_6_0_0()); }
	'render'
	{ after(grammarAccess.getShapeAccess().getRenderKeyword_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getColonKeyword_6_0_1()); }
	':'
	{ after(grammarAccess.getShapeAccess().getColonKeyword_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingTexts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__0__Impl
	rule__FloatingTexts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getFloatingTextsAction_0()); }
	()
	{ after(grammarAccess.getFloatingTextsAccess().getFloatingTextsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__1__Impl
	rule__FloatingTexts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getAlternatives_1()); }
	(rule__FloatingTexts__Alternatives_1)
	{ after(grammarAccess.getFloatingTextsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getTextsAssignment_2()); }
	(rule__FloatingTexts__TextsAssignment_2)*
	{ after(grammarAccess.getFloatingTextsAccess().getTextsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingTexts__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group_1_0__0__Impl
	rule__FloatingTexts__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getTextsKeyword_1_0_0()); }
	'texts'
	{ after(grammarAccess.getFloatingTextsAccess().getTextsKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getFloatingTextsAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__0__Impl
	rule__FloatingText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getFloatingTextAction_0()); }
	()
	{ after(grammarAccess.getFloatingTextAccess().getFloatingTextAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__1__Impl
	rule__FloatingText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getAlternatives_1()); }
	(rule__FloatingText__Alternatives_1)
	{ after(grammarAccess.getFloatingTextAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__2__Impl
	rule__FloatingText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getRectAssignment_2()); }
	(rule__FloatingText__RectAssignment_2)
	{ after(grammarAccess.getFloatingTextAccess().getRectAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getEndAssignment_3()); }
	(rule__FloatingText__EndAssignment_3)
	{ after(grammarAccess.getFloatingTextAccess().getEndAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingText__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group_1_0__0__Impl
	rule__FloatingText__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getTextKeyword_1_0_0()); }
	'text'
	{ after(grammarAccess.getFloatingTextAccess().getTextKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getFloatingTextAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeProps__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeProps__Group__0__Impl
	rule__ShapeProps__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapePropsAccess().getShapePropsAction_0()); }
	()
	{ after(grammarAccess.getShapePropsAccess().getShapePropsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeProps__Group__1__Impl
	rule__ShapeProps__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapePropsAccess().getAlternatives_1()); }
	(rule__ShapeProps__Alternatives_1)
	{ after(grammarAccess.getShapePropsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeProps__Group__2__Impl
	rule__ShapeProps__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapePropsAccess().getContainerAssignment_2()); }
	(rule__ShapeProps__ContainerAssignment_2)?
	{ after(grammarAccess.getShapePropsAccess().getContainerAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeProps__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapePropsAccess().getColorAssignment_3()); }
	(rule__ShapeProps__ColorAssignment_3)?
	{ after(grammarAccess.getShapePropsAccess().getColorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeProps__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeProps__Group_1_0__0__Impl
	rule__ShapeProps__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapePropsAccess().getPropertiesKeyword_1_0_0()); }
	'properties'
	{ after(grammarAccess.getShapePropsAccess().getPropertiesKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeProps__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapePropsAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getShapePropsAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__0__Impl
	rule__Container__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getShapeContainerAction_0()); }
	()
	{ after(grammarAccess.getContainerAccess().getShapeContainerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__1__Impl
	rule__Container__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainerKeyword_1()); }
	'container'
	{ after(grammarAccess.getContainerAccess().getContainerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getAlternatives_2()); }
	(rule__Container__Alternatives_2)
	{ after(grammarAccess.getContainerAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getColorKeyword_0()); }
	'color'
	{ after(grammarAccess.getColorAccess().getColorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRAssignment_1()); }
	(rule__Color__RAssignment_1)
	{ after(grammarAccess.getColorAccess().getRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getGAssignment_2()); }
	(rule__Color__GAssignment_2)
	{ after(grammarAccess.getColorAccess().getGAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getBAssignment_3()); }
	(rule__Color__BAssignment_3)
	{ after(grammarAccess.getColorAccess().getBAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connectors__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__0__Impl
	rule__Connectors__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getConnectorsAction_0()); }
	()
	{ after(grammarAccess.getConnectorsAccess().getConnectorsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__1__Impl
	rule__Connectors__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getAlternatives_1()); }
	(rule__Connectors__Alternatives_1)
	{ after(grammarAccess.getConnectorsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getConnectorsAssignment_2()); }
	(rule__Connectors__ConnectorsAssignment_2)*
	{ after(grammarAccess.getConnectorsAccess().getConnectorsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connectors__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group_1_0__0__Impl
	rule__Connectors__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getConnectorsKeyword_1_0_0()); }
	'connectors'
	{ after(grammarAccess.getConnectorsAccess().getConnectorsKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getConnectorsAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAlternatives_0()); }
	(rule__Connector__Alternatives_0)
	{ after(grammarAccess.getConnectorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getNameAssignment_1()); }
	(rule__Connector__NameAssignment_1)
	{ after(grammarAccess.getConnectorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getPropsAssignment_2()); }
	(rule__Connector__PropsAssignment_2)?
	{ after(grammarAccess.getConnectorAccess().getPropsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__3__Impl
	rule__Connector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getPolylineAssignment_3()); }
	(rule__Connector__PolylineAssignment_3)?
	{ after(grammarAccess.getConnectorAccess().getPolylineAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__4__Impl
	rule__Connector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAnchorsAssignment_4()); }
	(rule__Connector__AnchorsAssignment_4)?
	{ after(grammarAccess.getConnectorAccess().getAnchorsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__5__Impl
	rule__Connector__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTextsAssignment_5()); }
	(rule__Connector__TextsAssignment_5)
	{ after(grammarAccess.getConnectorAccess().getTextsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__6__Impl
	rule__Connector__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAlternatives_6()); }
	(rule__Connector__Alternatives_6)
	{ after(grammarAccess.getConnectorAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getRepresentsAssignment_7()); }
	(rule__Connector__RepresentsAssignment_7)
	{ after(grammarAccess.getConnectorAccess().getRepresentsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_0_0__0__Impl
	rule__Connector__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorKeyword_0_0_0()); }
	'connector'
	{ after(grammarAccess.getConnectorAccess().getConnectorKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getConnectorAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_6_0__0__Impl
	rule__Connector__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getRenderKeyword_6_0_0()); }
	'render'
	{ after(grammarAccess.getConnectorAccess().getRenderKeyword_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getColonKeyword_6_0_1()); }
	':'
	{ after(grammarAccess.getConnectorAccess().getColonKeyword_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Anchors__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__0__Impl
	rule__Anchors__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getAlternatives_0()); }
	(rule__Anchors__Alternatives_0)
	{ after(grammarAccess.getAnchorsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__1__Impl
	rule__Anchors__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getStartAnchorAssignment_1()); }
	(rule__Anchors__StartAnchorAssignment_1)
	{ after(grammarAccess.getAnchorsAccess().getStartAnchorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getEndAnchorAssignment_2()); }
	(rule__Anchors__EndAnchorAssignment_2)
	{ after(grammarAccess.getAnchorsAccess().getEndAnchorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Anchors__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group_0_0__0__Impl
	rule__Anchors__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getAnchorsKeyword_0_0_0()); }
	'anchors'
	{ after(grammarAccess.getAnchorsAccess().getAnchorsKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getAnchorsAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartAnchor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__0__Impl
	rule__StartAnchor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getAlternatives_0()); }
	(rule__StartAnchor__Alternatives_0)
	{ after(grammarAccess.getStartAnchorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__1__Impl
	rule__StartAnchor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getPointAssignment_1()); }
	(rule__StartAnchor__PointAssignment_1)
	{ after(grammarAccess.getStartAnchorAccess().getPointAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getAnchorAssignment_2()); }
	(rule__StartAnchor__AnchorAssignment_2)?
	{ after(grammarAccess.getStartAnchorAccess().getAnchorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartAnchor__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group_0_0__0__Impl
	rule__StartAnchor__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getStartKeyword_0_0_0()); }
	'start'
	{ after(grammarAccess.getStartAnchorAccess().getStartKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getStartAnchorAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndAnchor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__0__Impl
	rule__EndAnchor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getAlternatives_0()); }
	(rule__EndAnchor__Alternatives_0)
	{ after(grammarAccess.getEndAnchorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__1__Impl
	rule__EndAnchor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getPointAssignment_1()); }
	(rule__EndAnchor__PointAssignment_1)
	{ after(grammarAccess.getEndAnchorAccess().getPointAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getAnchorAssignment_2()); }
	(rule__EndAnchor__AnchorAssignment_2)?
	{ after(grammarAccess.getEndAnchorAccess().getAnchorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndAnchor__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group_0_0__0__Impl
	rule__EndAnchor__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getEndKeyword_0_0_0()); }
	'end'
	{ after(grammarAccess.getEndAnchorAccess().getEndKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getEndAnchorAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeAnchorElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group__0__Impl
	rule__ShapeAnchorElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getAlternatives_0()); }
	(rule__ShapeAnchorElement__Alternatives_0)
	{ after(grammarAccess.getShapeAnchorElementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getElementAssignment_1()); }
	(rule__ShapeAnchorElement__ElementAssignment_1)
	{ after(grammarAccess.getShapeAnchorElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeAnchorElement__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group_0_0__0__Impl
	rule__ShapeAnchorElement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getShapeAnchorKeyword_0_0_0()); }
	'shapeAnchor'
	{ after(grammarAccess.getShapeAnchorElementAccess().getShapeAnchorKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getShapeAnchorElementAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorAnchorElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group__0__Impl
	rule__ConnectorAnchorElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getAlternatives_0()); }
	(rule__ConnectorAnchorElement__Alternatives_0)
	{ after(grammarAccess.getConnectorAnchorElementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getElementAssignment_1()); }
	(rule__ConnectorAnchorElement__ElementAssignment_1)
	{ after(grammarAccess.getConnectorAnchorElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorAnchorElement__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group_0_0__0__Impl
	rule__ConnectorAnchorElement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getSegmentAnchorKeyword_0_0_0()); }
	'segmentAnchor'
	{ after(grammarAccess.getConnectorAnchorElementAccess().getSegmentAnchorKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getConnectorAnchorElementAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorProps__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorProps__Group__0__Impl
	rule__ConnectorProps__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorPropsAccess().getConnectorPropsAction_0()); }
	()
	{ after(grammarAccess.getConnectorPropsAccess().getConnectorPropsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorProps__Group__1__Impl
	rule__ConnectorProps__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorPropsAccess().getAlternatives_1()); }
	(rule__ConnectorProps__Alternatives_1)
	{ after(grammarAccess.getConnectorPropsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorProps__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorPropsAccess().getColorAssignment_2()); }
	(rule__ConnectorProps__ColorAssignment_2)?
	{ after(grammarAccess.getConnectorPropsAccess().getColorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorProps__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorProps__Group_1_0__0__Impl
	rule__ConnectorProps__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorPropsAccess().getPropertiesKeyword_1_0_0()); }
	'properties'
	{ after(grammarAccess.getConnectorPropsAccess().getPropertiesKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorProps__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorPropsAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getConnectorPropsAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polyline__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__0__Impl
	rule__Polyline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getPolylineAction_0()); }
	()
	{ after(grammarAccess.getPolylineAccess().getPolylineAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__1__Impl
	rule__Polyline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getAlternatives_1()); }
	(rule__Polyline__Alternatives_1)
	{ after(grammarAccess.getPolylineAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getSegmentsAssignment_2()); }
	(rule__Polyline__SegmentsAssignment_2)*
	{ after(grammarAccess.getPolylineAccess().getSegmentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polyline__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group_1_0__0__Impl
	rule__Polyline__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getPolylineKeyword_1_0_0()); }
	'polyline'
	{ after(grammarAccess.getPolylineAccess().getPolylineKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getPolylineAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Segment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__0__Impl
	rule__Segment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getAlternatives_0()); }
	(rule__Segment__Alternatives_0)
	{ after(grammarAccess.getSegmentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__1__Impl
	rule__Segment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getStartPointAssignment_1()); }
	(rule__Segment__StartPointAssignment_1)
	{ after(grammarAccess.getSegmentAccess().getStartPointAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__2__Impl
	rule__Segment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getSegmentAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getEndPointAssignment_3()); }
	(rule__Segment__EndPointAssignment_3)
	{ after(grammarAccess.getSegmentAccess().getEndPointAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Segment__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group_0_0__0__Impl
	rule__Segment__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getSegmentKeyword_0_0_0()); }
	'segment'
	{ after(grammarAccess.getSegmentAccess().getSegmentKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getSegmentAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXKeyword_0()); }
	'x'
	{ after(grammarAccess.getPointAccess().getXKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXAssignment_1()); }
	(rule__Point__XAssignment_1)
	{ after(grammarAccess.getPointAccess().getXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYKeyword_2()); }
	'y'
	{ after(grammarAccess.getPointAccess().getYKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYAssignment_3()); }
	(rule__Point__YAssignment_3)
	{ after(grammarAccess.getPointAccess().getYAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__0__Impl
	rule__Rectangle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getAlternatives_0()); }
	(rule__Rectangle__Alternatives_0)
	{ after(grammarAccess.getRectangleAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__1__Impl
	rule__Rectangle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getXKeyword_1()); }
	'x'
	{ after(grammarAccess.getRectangleAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__2__Impl
	rule__Rectangle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getXAssignment_2()); }
	(rule__Rectangle__XAssignment_2)
	{ after(grammarAccess.getRectangleAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__3__Impl
	rule__Rectangle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getYKeyword_3()); }
	'y'
	{ after(grammarAccess.getRectangleAccess().getYKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__4__Impl
	rule__Rectangle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getYAssignment_4()); }
	(rule__Rectangle__YAssignment_4)
	{ after(grammarAccess.getRectangleAccess().getYAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__5__Impl
	rule__Rectangle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getWidthKeyword_5()); }
	'width'
	{ after(grammarAccess.getRectangleAccess().getWidthKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__6__Impl
	rule__Rectangle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getWAssignment_6()); }
	(rule__Rectangle__WAssignment_6)
	{ after(grammarAccess.getRectangleAccess().getWAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__7__Impl
	rule__Rectangle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getHeightKeyword_7()); }
	'height'
	{ after(grammarAccess.getRectangleAccess().getHeightKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getHAssignment_8()); }
	(rule__Rectangle__HAssignment_8)
	{ after(grammarAccess.getRectangleAccess().getHAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group_0_0__0__Impl
	rule__Rectangle__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getRectangleKeyword_0_0_0()); }
	'rectangle'
	{ after(grammarAccess.getRectangleAccess().getRectangleKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rectangle__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleAccess().getColonKeyword_0_0_1()); }
	':'
	{ after(grammarAccess.getRectangleAccess().getColonKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__SemanticsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSemanticsSemanticModelParserRuleCall_0_0()); }
		ruleSemanticModel
		{ after(grammarAccess.getModelAccess().getSemanticsSemanticModelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RepresentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRepresentsSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelAccess().getRepresentsSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPropertiesModelPropertiesParserRuleCall_3_0()); }
		ruleModelProperties
		{ after(grammarAccess.getModelAccess().getPropertiesModelPropertiesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsGraphicalElementParserRuleCall_4_0()); }
		ruleGraphicalElement
		{ after(grammarAccess.getModelAccess().getElementsGraphicalElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticModel__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticModelAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSemanticModelAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__PointAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getPointPointParserRuleCall_2_0()); }
		rulePoint
		{ after(grammarAccess.getModelPropertiesAccess().getPointPointParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__ZoomAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getZoomINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getModelPropertiesAccess().getZoomINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__ShapesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapesAccess().getShapesShapeParserRuleCall_2_0()); }
		ruleShape
		{ after(grammarAccess.getShapesAccess().getShapesShapeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getShapeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__PropsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getPropsShapePropsParserRuleCall_3_0()); }
		ruleShapeProps
		{ after(grammarAccess.getShapeAccess().getPropsShapePropsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__RectAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getRectRectangleParserRuleCall_4_0()); }
		ruleRectangle
		{ after(grammarAccess.getShapeAccess().getRectRectangleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__TextAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getTextFloatingTextParserRuleCall_5_0()); }
		ruleFloatingText
		{ after(grammarAccess.getShapeAccess().getTextFloatingTextParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__RepresentsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getRepresentsSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getShapeAccess().getRepresentsSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__TextsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextsAccess().getTextsFloatingTextParserRuleCall_2_0()); }
		ruleFloatingText
		{ after(grammarAccess.getFloatingTextsAccess().getTextsFloatingTextParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__RectAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextAccess().getRectRectangleParserRuleCall_2_0()); }
		ruleRectangle
		{ after(grammarAccess.getFloatingTextAccess().getRectRectangleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__EndAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextAccess().getEndEnumEndParserRuleCall_3_0()); }
		ruleEnumEnd
		{ after(grammarAccess.getFloatingTextAccess().getEndEnumEndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__ContainerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapePropsAccess().getContainerContainerParserRuleCall_2_0()); }
		ruleContainer
		{ after(grammarAccess.getShapePropsAccess().getContainerContainerParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeProps__ColorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapePropsAccess().getColorColorParserRuleCall_3_0()); }
		ruleColor
		{ after(grammarAccess.getShapePropsAccess().getColorColorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getColorAccess().getRINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getGINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getColorAccess().getGINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getColorAccess().getBINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__ConnectorsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorsAccess().getConnectorsConnectorParserRuleCall_2_0()); }
		ruleConnector
		{ after(grammarAccess.getConnectorsAccess().getConnectorsConnectorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__PropsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getPropsConnectorPropsParserRuleCall_2_0()); }
		ruleConnectorProps
		{ after(grammarAccess.getConnectorAccess().getPropsConnectorPropsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__PolylineAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getPolylinePolylineParserRuleCall_3_0()); }
		rulePolyline
		{ after(grammarAccess.getConnectorAccess().getPolylinePolylineParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__AnchorsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getAnchorsAnchorsParserRuleCall_4_0()); }
		ruleAnchors
		{ after(grammarAccess.getConnectorAccess().getAnchorsAnchorsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__TextsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getTextsFloatingTextsParserRuleCall_5_0()); }
		ruleFloatingTexts
		{ after(grammarAccess.getConnectorAccess().getTextsFloatingTextsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__RepresentsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getRepresentsSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getConnectorAccess().getRepresentsSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__StartAnchorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorsAccess().getStartAnchorStartAnchorParserRuleCall_1_0()); }
		ruleStartAnchor
		{ after(grammarAccess.getAnchorsAccess().getStartAnchorStartAnchorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__EndAnchorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorsAccess().getEndAnchorEndAnchorParserRuleCall_2_0()); }
		ruleEndAnchor
		{ after(grammarAccess.getAnchorsAccess().getEndAnchorEndAnchorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__PointAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAnchorAccess().getPointPointParserRuleCall_1_0()); }
		rulePoint
		{ after(grammarAccess.getStartAnchorAccess().getPointPointParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__AnchorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAnchorAccess().getAnchorAnchorParserRuleCall_2_0()); }
		ruleAnchor
		{ after(grammarAccess.getStartAnchorAccess().getAnchorAnchorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__PointAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAnchorAccess().getPointPointParserRuleCall_1_0()); }
		rulePoint
		{ after(grammarAccess.getEndAnchorAccess().getPointPointParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__AnchorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAnchorAccess().getAnchorAnchorParserRuleCall_2_0()); }
		ruleAnchor
		{ after(grammarAccess.getEndAnchorAccess().getAnchorAnchorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAnchorElementAccess().getElementShapeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getShapeAnchorElementAccess().getElementShapeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getShapeAnchorElementAccess().getElementShapeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getShapeAnchorElementAccess().getElementShapeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorProps__ColorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorPropsAccess().getColorColorParserRuleCall_2_0()); }
		ruleColor
		{ after(grammarAccess.getConnectorPropsAccess().getColorColorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__SegmentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolylineAccess().getSegmentsSegmentParserRuleCall_2_0()); }
		ruleSegment
		{ after(grammarAccess.getPolylineAccess().getSegmentsSegmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__StartPointAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSegmentAccess().getStartPointPointParserRuleCall_1_0()); }
		rulePoint
		{ after(grammarAccess.getSegmentAccess().getStartPointPointParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__EndPointAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSegmentAccess().getEndPointPointParserRuleCall_3_0()); }
		rulePoint
		{ after(grammarAccess.getSegmentAccess().getEndPointPointParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getXINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPointAccess().getXINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getYINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getPointAccess().getYINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getXINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRectangleAccess().getXINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__YAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getYINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getRectangleAccess().getYINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__WAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getWINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getRectangleAccess().getWINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__HAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleAccess().getHINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getRectangleAccess().getHINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
