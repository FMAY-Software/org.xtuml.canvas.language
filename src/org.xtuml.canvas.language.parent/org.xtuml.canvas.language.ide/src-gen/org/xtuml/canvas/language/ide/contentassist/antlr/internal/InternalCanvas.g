/*
 * generated by Xtext 2.22.0
 */
grammar InternalCanvas;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtuml.canvas.language.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtuml.canvas.language.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtuml.canvas.language.services.CanvasGrammarAccess;

}
@parser::members {
	private CanvasGrammarAccess grammarAccess;

	public void setGrammarAccess(CanvasGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelRender
entryRuleModelRender
:
{ before(grammarAccess.getModelRenderRule()); }
	 ruleModelRender
{ after(grammarAccess.getModelRenderRule()); } 
	 EOF 
;

// Rule ModelRender
ruleModelRender 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelRenderAccess().getGroup()); }
		(rule__ModelRender__Group__0)
		{ after(grammarAccess.getModelRenderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelProperties
entryRuleModelProperties
:
{ before(grammarAccess.getModelPropertiesRule()); }
	 ruleModelProperties
{ after(grammarAccess.getModelPropertiesRule()); } 
	 EOF 
;

// Rule ModelProperties
ruleModelProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getGroup()); }
		(rule__ModelProperties__Group__0)
		{ after(grammarAccess.getModelPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphicalElement
entryRuleGraphicalElement
:
{ before(grammarAccess.getGraphicalElementRule()); }
	 ruleGraphicalElement
{ after(grammarAccess.getGraphicalElementRule()); } 
	 EOF 
;

// Rule GraphicalElement
ruleGraphicalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphicalElementAccess().getAlternatives()); }
		(rule__GraphicalElement__Alternatives)
		{ after(grammarAccess.getGraphicalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapes
entryRuleShapes
:
{ before(grammarAccess.getShapesRule()); }
	 ruleShapes
{ after(grammarAccess.getShapesRule()); } 
	 EOF 
;

// Rule Shapes
ruleShapes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapesAccess().getGroup()); }
		(rule__Shapes__Group__0)
		{ after(grammarAccess.getShapesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShape
entryRuleShape
:
{ before(grammarAccess.getShapeRule()); }
	 ruleShape
{ after(grammarAccess.getShapeRule()); } 
	 EOF 
;

// Rule Shape
ruleShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAccess().getGroup()); }
		(rule__Shape__Group__0)
		{ after(grammarAccess.getShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getContainerKeyword()); }
		'container'
		{ after(grammarAccess.getContainerAccess().getContainerKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatingTexts
entryRuleFloatingTexts
:
{ before(grammarAccess.getFloatingTextsRule()); }
	 ruleFloatingTexts
{ after(grammarAccess.getFloatingTextsRule()); } 
	 EOF 
;

// Rule FloatingTexts
ruleFloatingTexts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatingTextsAccess().getGroup()); }
		(rule__FloatingTexts__Group__0)
		{ after(grammarAccess.getFloatingTextsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatingText
entryRuleFloatingText
:
{ before(grammarAccess.getFloatingTextRule()); }
	 ruleFloatingText
{ after(grammarAccess.getFloatingTextRule()); } 
	 EOF 
;

// Rule FloatingText
ruleFloatingText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatingTextAccess().getGroup()); }
		(rule__FloatingText__Group__0)
		{ after(grammarAccess.getFloatingTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumEnd
entryRuleEnumEnd
:
{ before(grammarAccess.getEnumEndRule()); }
	 ruleEnumEnd
{ after(grammarAccess.getEnumEndRule()); } 
	 EOF 
;

// Rule EnumEnd
ruleEnumEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumEndAccess().getGroup()); }
		(rule__EnumEnd__Group__0)
		{ after(grammarAccess.getEnumEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectors
entryRuleConnectors
:
{ before(grammarAccess.getConnectorsRule()); }
	 ruleConnectors
{ after(grammarAccess.getConnectorsRule()); } 
	 EOF 
;

// Rule Connectors
ruleConnectors 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorsAccess().getGroup()); }
		(rule__Connectors__Group__0)
		{ after(grammarAccess.getConnectorsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnchors
entryRuleAnchors
:
{ before(grammarAccess.getAnchorsRule()); }
	 ruleAnchors
{ after(grammarAccess.getAnchorsRule()); } 
	 EOF 
;

// Rule Anchors
ruleAnchors 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnchorsAccess().getGroup()); }
		(rule__Anchors__Group__0)
		{ after(grammarAccess.getAnchorsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartAnchor
entryRuleStartAnchor
:
{ before(grammarAccess.getStartAnchorRule()); }
	 ruleStartAnchor
{ after(grammarAccess.getStartAnchorRule()); } 
	 EOF 
;

// Rule StartAnchor
ruleStartAnchor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartAnchorAccess().getGroup()); }
		(rule__StartAnchor__Group__0)
		{ after(grammarAccess.getStartAnchorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndAnchor
entryRuleEndAnchor
:
{ before(grammarAccess.getEndAnchorRule()); }
	 ruleEndAnchor
{ after(grammarAccess.getEndAnchorRule()); } 
	 EOF 
;

// Rule EndAnchor
ruleEndAnchor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAnchorAccess().getGroup()); }
		(rule__EndAnchor__Group__0)
		{ after(grammarAccess.getEndAnchorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnchor
entryRuleAnchor
:
{ before(grammarAccess.getAnchorRule()); }
	 ruleAnchor
{ after(grammarAccess.getAnchorRule()); } 
	 EOF 
;

// Rule Anchor
ruleAnchor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnchorAccess().getAlternatives()); }
		(rule__Anchor__Alternatives)
		{ after(grammarAccess.getAnchorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeAnchorElement
entryRuleShapeAnchorElement
:
{ before(grammarAccess.getShapeAnchorElementRule()); }
	 ruleShapeAnchorElement
{ after(grammarAccess.getShapeAnchorElementRule()); } 
	 EOF 
;

// Rule ShapeAnchorElement
ruleShapeAnchorElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAnchorElementAccess().getGroup()); }
		(rule__ShapeAnchorElement__Group__0)
		{ after(grammarAccess.getShapeAnchorElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorAnchorElement
entryRuleConnectorAnchorElement
:
{ before(grammarAccess.getConnectorAnchorElementRule()); }
	 ruleConnectorAnchorElement
{ after(grammarAccess.getConnectorAnchorElementRule()); } 
	 EOF 
;

// Rule ConnectorAnchorElement
ruleConnectorAnchorElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAnchorElementAccess().getGroup()); }
		(rule__ConnectorAnchorElement__Group__0)
		{ after(grammarAccess.getConnectorAnchorElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolyline
entryRulePolyline
:
{ before(grammarAccess.getPolylineRule()); }
	 rulePolyline
{ after(grammarAccess.getPolylineRule()); } 
	 EOF 
;

// Rule Polyline
rulePolyline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolylineAccess().getGroup()); }
		(rule__Polyline__Group__0)
		{ after(grammarAccess.getPolylineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSegment
entryRuleSegment
:
{ before(grammarAccess.getSegmentRule()); }
	 ruleSegment
{ after(grammarAccess.getSegmentRule()); } 
	 EOF 
;

// Rule Segment
ruleSegment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSegmentAccess().getGroup()); }
		(rule__Segment__Group__0)
		{ after(grammarAccess.getSegmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointDefinition
entryRulePointDefinition
:
{ before(grammarAccess.getPointDefinitionRule()); }
	 rulePointDefinition
{ after(grammarAccess.getPointDefinitionRule()); } 
	 EOF 
;

// Rule PointDefinition
rulePointDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointDefinitionAccess().getGroup()); }
		(rule__PointDefinition__Group__0)
		{ after(grammarAccess.getPointDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBounds
entryRuleBounds
:
{ before(grammarAccess.getBoundsRule()); }
	 ruleBounds
{ after(grammarAccess.getBoundsRule()); } 
	 EOF 
;

// Rule Bounds
ruleBounds 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundsAccess().getGroup()); }
		(rule__Bounds__Group__0)
		{ after(grammarAccess.getBoundsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLabel
entryRuleTypeLabel
:
{ before(grammarAccess.getTypeLabelRule()); }
	 ruleTypeLabel
{ after(grammarAccess.getTypeLabelRule()); } 
	 EOF 
;

// Rule TypeLabel
ruleTypeLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLabelAccess().getOOATypeParserRuleCall()); }
		ruleOOAType
		{ after(grammarAccess.getTypeLabelAccess().getOOATypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOOAType
entryRuleOOAType
:
{ before(grammarAccess.getOOATypeRule()); }
	 ruleOOAType
{ after(grammarAccess.getOOATypeRule()); } 
	 EOF 
;

// Rule OOAType
ruleOOAType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOOATypeAccess().getAlternatives()); }
		(rule__OOAType__Alternatives)
		{ after(grammarAccess.getOOATypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphicalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphicalElementAccess().getShapesParserRuleCall_0()); }
		ruleShapes
		{ after(grammarAccess.getGraphicalElementAccess().getShapesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphicalElementAccess().getConnectorsParserRuleCall_1()); }
		ruleConnectors
		{ after(grammarAccess.getGraphicalElementAccess().getConnectorsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__WhereAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereStartKeyword_2_0_0()); }
		'start'
		{ after(grammarAccess.getEnumEndAccess().getWhereStartKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereEndKeyword_2_0_1()); }
		'end'
		{ after(grammarAccess.getEnumEndAccess().getWhereEndKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereMiddleKeyword_2_0_2()); }
		'middle'
		{ after(grammarAccess.getEnumEndAccess().getWhereMiddleKeyword_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereEnd_fixedKeyword_2_0_3()); }
		'end_fixed'
		{ after(grammarAccess.getEnumEndAccess().getWhereEnd_fixedKeyword_2_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereStart_fixedKeyword_2_0_4()); }
		'start_fixed'
		{ after(grammarAccess.getEnumEndAccess().getWhereStart_fixedKeyword_2_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereNoneKeyword_2_0_5()); }
		'none'
		{ after(grammarAccess.getEnumEndAccess().getWhereNoneKeyword_2_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereFloatingKeyword_2_0_6()); }
		'floating'
		{ after(grammarAccess.getEnumEndAccess().getWhereFloatingKeyword_2_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereAdditionalKeyword_2_0_7()); }
		'additional'
		{ after(grammarAccess.getEnumEndAccess().getWhereAdditionalKeyword_2_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorAccess().getShapeAnchorElementParserRuleCall_0()); }
		ruleShapeAnchorElement
		{ after(grammarAccess.getAnchorAccess().getShapeAnchorElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnchorAccess().getConnectorAnchorElementParserRuleCall_1()); }
		ruleConnectorAnchorElement
		{ after(grammarAccess.getAnchorAccess().getConnectorAnchorElementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OOAType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOOATypeAccess().getAccess_pathKeyword_0()); }
		'access_path'
		{ after(grammarAccess.getOOATypeAccess().getAccess_pathKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getAssociationKeyword_1()); }
		'association'
		{ after(grammarAccess.getOOATypeAccess().getAssociationKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getAssociative_linkKeyword_2()); }
		'associative_link'
		{ after(grammarAccess.getOOATypeAccess().getAssociative_linkKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getClassKeyword_3()); }
		'class'
		{ after(grammarAccess.getOOATypeAccess().getClassKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCommunication_pathKeyword_4()); }
		'communication_path'
		{ after(grammarAccess.getOOATypeAccess().getCommunication_pathKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getData_typeKeyword_5()); }
		'data_type'
		{ after(grammarAccess.getOOATypeAccess().getData_typeKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getDerived_access_pathKeyword_6()); }
		'derived_access_path'
		{ after(grammarAccess.getOOATypeAccess().getDerived_access_pathKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getDerived_communication_pathKeyword_7()); }
		'derived_communication_path'
		{ after(grammarAccess.getOOATypeAccess().getDerived_communication_pathKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getEeKeyword_8()); }
		'ee'
		{ after(grammarAccess.getOOATypeAccess().getEeKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getEnumeration_data_typeKeyword_9()); }
		'enumeration_data_type'
		{ after(grammarAccess.getOOATypeAccess().getEnumeration_data_typeKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getImported_classKeyword_10()); }
		'imported_class'
		{ after(grammarAccess.getOOATypeAccess().getImported_classKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getNoneKeyword_11()); }
		'none'
		{ after(grammarAccess.getOOATypeAccess().getNoneKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getStateKeyword_12()); }
		'state'
		{ after(grammarAccess.getOOATypeAccess().getStateKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getState_machineKeyword_13()); }
		'state_machine'
		{ after(grammarAccess.getOOATypeAccess().getState_machineKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSubsystemKeyword_14()); }
		'subsystem'
		{ after(grammarAccess.getOOATypeAccess().getSubsystemKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getTransitionKeyword_15()); }
		'transition'
		{ after(grammarAccess.getOOATypeAccess().getTransitionKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getUser_data_typeKeyword_16()); }
		'user_data_type'
		{ after(grammarAccess.getOOATypeAccess().getUser_data_typeKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSubtypeKeyword_17()); }
		'subtype'
		{ after(grammarAccess.getOOATypeAccess().getSubtypeKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSupertypeKeyword_18()); }
		'supertype'
		{ after(grammarAccess.getOOATypeAccess().getSupertypeKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCreation_transitionKeyword_19()); }
		'creation_transition'
		{ after(grammarAccess.getOOATypeAccess().getCreation_transitionKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSequenceKeyword_20()); }
		'sequence'
		{ after(grammarAccess.getOOATypeAccess().getSequenceKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getLifelineKeyword_21()); }
		'lifeline'
		{ after(grammarAccess.getOOATypeAccess().getLifelineKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getTiming_markKeyword_22()); }
		'timing_mark'
		{ after(grammarAccess.getOOATypeAccess().getTiming_markKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getTime_spanKeyword_23()); }
		'time_span'
		{ after(grammarAccess.getOOATypeAccess().getTime_spanKeyword_23()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSynchronous_messageKeyword_24()); }
		'synchronous_message'
		{ after(grammarAccess.getOOATypeAccess().getSynchronous_messageKeyword_24()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getClass_instance_participantKeyword_25()); }
		'class_instance_participant'
		{ after(grammarAccess.getOOATypeAccess().getClass_instance_participantKeyword_25()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getExternal_entity_participantKeyword_26()); }
		'external_entity_participant'
		{ after(grammarAccess.getOOATypeAccess().getExternal_entity_participantKeyword_26()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getClass_participantKeyword_27()); }
		'class_participant'
		{ after(grammarAccess.getOOATypeAccess().getClass_participantKeyword_27()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getActorKeyword_28()); }
		'actor'
		{ after(grammarAccess.getOOATypeAccess().getActorKeyword_28()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getAsynchronous_messageKeyword_29()); }
		'asynchronous_message'
		{ after(grammarAccess.getOOATypeAccess().getAsynchronous_messageKeyword_29()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getReturn_messageKeyword_30()); }
		'return_message'
		{ after(grammarAccess.getOOATypeAccess().getReturn_messageKeyword_30()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCommunicationKeyword_31()); }
		'communication'
		{ after(grammarAccess.getOOATypeAccess().getCommunicationKeyword_31()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCommunication_linkKeyword_32()); }
		'communication_link'
		{ after(grammarAccess.getOOATypeAccess().getCommunication_linkKeyword_32()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCommunication_return_messageKeyword_33()); }
		'communication_return_message'
		{ after(grammarAccess.getOOATypeAccess().getCommunication_return_messageKeyword_33()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCommunication_asynchronous_messageKeyword_34()); }
		'communication_asynchronous_message'
		{ after(grammarAccess.getOOATypeAccess().getCommunication_asynchronous_messageKeyword_34()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getCommunication_synchronous_messageKeyword_35()); }
		'communication_synchronous_message'
		{ after(grammarAccess.getOOATypeAccess().getCommunication_synchronous_messageKeyword_35()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getUse_caseKeyword_36()); }
		'use_case'
		{ after(grammarAccess.getOOATypeAccess().getUse_caseKeyword_36()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getUse_case_diagramKeyword_37()); }
		'use_case_diagram'
		{ after(grammarAccess.getOOATypeAccess().getUse_case_diagramKeyword_37()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getUse_case_binary_associationKeyword_38()); }
		'use_case_binary_association'
		{ after(grammarAccess.getOOATypeAccess().getUse_case_binary_associationKeyword_38()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getGeneralizationKeyword_39()); }
		'generalization'
		{ after(grammarAccess.getOOATypeAccess().getGeneralizationKeyword_39()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getIncludeKeyword_40()); }
		'include'
		{ after(grammarAccess.getOOATypeAccess().getIncludeKeyword_40()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getExtendKeyword_41()); }
		'extend'
		{ after(grammarAccess.getOOATypeAccess().getExtendKeyword_41()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getForkJoinKeyword_42()); }
		'forkJoin'
		{ after(grammarAccess.getOOATypeAccess().getForkJoinKeyword_42()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getActivityKeyword_43()); }
		'activity'
		{ after(grammarAccess.getOOATypeAccess().getActivityKeyword_43()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getInitial_nodeKeyword_44()); }
		'initial_node'
		{ after(grammarAccess.getOOATypeAccess().getInitial_nodeKeyword_44()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getActivity_edgeKeyword_45()); }
		'activity_edge'
		{ after(grammarAccess.getOOATypeAccess().getActivity_edgeKeyword_45()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getActivity_final_nodeKeyword_46()); }
		'activity_final_node'
		{ after(grammarAccess.getOOATypeAccess().getActivity_final_nodeKeyword_46()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getFlow_final_nodeKeyword_47()); }
		'flow_final_node'
		{ after(grammarAccess.getOOATypeAccess().getFlow_final_nodeKeyword_47()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getGeneric_actionKeyword_48()); }
		'generic_action'
		{ after(grammarAccess.getOOATypeAccess().getGeneric_actionKeyword_48()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getDecision_merge_nodeKeyword_49()); }
		'decision_merge_node'
		{ after(grammarAccess.getOOATypeAccess().getDecision_merge_nodeKeyword_49()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getObject_nodeKeyword_50()); }
		'object_node'
		{ after(grammarAccess.getOOATypeAccess().getObject_nodeKeyword_50()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getAccept_event_actionKeyword_51()); }
		'accept_event_action'
		{ after(grammarAccess.getOOATypeAccess().getAccept_event_actionKeyword_51()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSend_signal_actionKeyword_52()); }
		'send_signal_action'
		{ after(grammarAccess.getOOATypeAccess().getSend_signal_actionKeyword_52()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getAccept_time_event_actionKeyword_53()); }
		'accept_time_event_action'
		{ after(grammarAccess.getOOATypeAccess().getAccept_time_event_actionKeyword_53()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getPartitionKeyword_54()); }
		'partition'
		{ after(grammarAccess.getOOATypeAccess().getPartitionKeyword_54()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getComponentKeyword_55()); }
		'component'
		{ after(grammarAccess.getOOATypeAccess().getComponentKeyword_55()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getProvided_interfaceKeyword_56()); }
		'provided_interface'
		{ after(grammarAccess.getOOATypeAccess().getProvided_interfaceKeyword_56()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getRequired_interfaceKeyword_57()); }
		'required_interface'
		{ after(grammarAccess.getOOATypeAccess().getRequired_interfaceKeyword_57()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getInterfaceKeyword_58()); }
		'interface'
		{ after(grammarAccess.getOOATypeAccess().getInterfaceKeyword_58()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSystem_modelKeyword_59()); }
		'system_model'
		{ after(grammarAccess.getOOATypeAccess().getSystem_modelKeyword_59()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getStructured_data_typeKeyword_60()); }
		'structured_data_type'
		{ after(grammarAccess.getOOATypeAccess().getStructured_data_typeKeyword_60()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getComponent_referenceKeyword_61()); }
		'component_reference'
		{ after(grammarAccess.getOOATypeAccess().getComponent_referenceKeyword_61()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getComponent_diagramKeyword_62()); }
		'component_diagram'
		{ after(grammarAccess.getOOATypeAccess().getComponent_diagramKeyword_62()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getDelegationKeyword_63()); }
		'delegation'
		{ after(grammarAccess.getOOATypeAccess().getDelegationKeyword_63()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getComponent_containerKeyword_64()); }
		'component_container'
		{ after(grammarAccess.getOOATypeAccess().getComponent_containerKeyword_64()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getImported_provided_interfaceKeyword_65()); }
		'imported_provided_interface'
		{ after(grammarAccess.getOOATypeAccess().getImported_provided_interfaceKeyword_65()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getImported_required_interfaceKeyword_66()); }
		'imported_required_interface'
		{ after(grammarAccess.getOOATypeAccess().getImported_required_interfaceKeyword_66()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getComponent_participantKeyword_67()); }
		'component_participant'
		{ after(grammarAccess.getOOATypeAccess().getComponent_participantKeyword_67()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getPackageKeyword_68()); }
		'package'
		{ after(grammarAccess.getOOATypeAccess().getPackageKeyword_68()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getConstant_specificationKeyword_69()); }
		'constant_specification'
		{ after(grammarAccess.getOOATypeAccess().getConstant_specificationKeyword_69()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getPackage_participantKeyword_70()); }
		'package_participant'
		{ after(grammarAccess.getOOATypeAccess().getPackage_participantKeyword_70()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getShapeKeyword_71()); }
		'shape'
		{ after(grammarAccess.getOOATypeAccess().getShapeKeyword_71()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getConnectorKeyword_72()); }
		'connector'
		{ after(grammarAccess.getOOATypeAccess().getConnectorKeyword_72()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getDiagramKeyword_73()); }
		'diagram'
		{ after(grammarAccess.getOOATypeAccess().getDiagramKeyword_73()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getExceptionKeyword_74()); }
		'exception'
		{ after(grammarAccess.getOOATypeAccess().getExceptionKeyword_74()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getSatisfactionKeyword_75()); }
		'satisfaction'
		{ after(grammarAccess.getOOATypeAccess().getSatisfactionKeyword_75()); }
	)
	|
	(
		{ before(grammarAccess.getOOATypeAccess().getDeploymentKeyword_76()); }
		'deployment'
		{ after(grammarAccess.getOOATypeAccess().getDeploymentKeyword_76()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRenderAssignment_0()); }
	(rule__Model__RenderAssignment_0)
	{ after(grammarAccess.getModelAccess().getRenderAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPropertiesAssignment_1()); }
	(rule__Model__PropertiesAssignment_1)?
	{ after(grammarAccess.getModelAccess().getPropertiesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_2()); }
	(rule__Model__ElementsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelRender__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRender__Group__0__Impl
	rule__ModelRender__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRender__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRenderAccess().getRenderKeyword_0()); }
	'render'
	{ after(grammarAccess.getModelRenderAccess().getRenderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRender__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRender__Group__1__Impl
	rule__ModelRender__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRender__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRenderAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getModelRenderAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRender__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelRender__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRender__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelRenderAccess().getImportURIAssignment_2()); }
	(rule__ModelRender__ImportURIAssignment_2)
	{ after(grammarAccess.getModelRenderAccess().getImportURIAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__0__Impl
	rule__ModelProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getPropertiesKeyword_0()); }
	'properties'
	{ after(grammarAccess.getModelPropertiesAccess().getPropertiesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__1__Impl
	rule__ModelProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getModelPropertiesAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__2__Impl
	rule__ModelProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getViewportKeyword_2()); }
	'viewport'
	{ after(grammarAccess.getModelPropertiesAccess().getViewportKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__3__Impl
	rule__ModelProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getModelPropertiesAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__4__Impl
	rule__ModelProperties__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getPointAssignment_4()); }
	(rule__ModelProperties__PointAssignment_4)
	{ after(grammarAccess.getModelPropertiesAccess().getPointAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__5__Impl
	rule__ModelProperties__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getZoomKeyword_5()); }
	'zoom'
	{ after(grammarAccess.getModelPropertiesAccess().getZoomKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__6__Impl
	rule__ModelProperties__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getModelPropertiesAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelProperties__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPropertiesAccess().getZoomAssignment_7()); }
	(rule__ModelProperties__ZoomAssignment_7)
	{ after(grammarAccess.getModelPropertiesAccess().getZoomAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shapes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__0__Impl
	rule__Shapes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getShapesAction_0()); }
	()
	{ after(grammarAccess.getShapesAccess().getShapesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__1__Impl
	rule__Shapes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getShapesKeyword_1()); }
	'shapes'
	{ after(grammarAccess.getShapesAccess().getShapesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__2__Impl
	rule__Shapes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getShapesAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shapes__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapesAccess().getShapesAssignment_3()); }
	(rule__Shapes__ShapesAssignment_3)*
	{ after(grammarAccess.getShapesAccess().getShapesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__0__Impl
	rule__Shape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getShapeAction_0()); }
	()
	{ after(grammarAccess.getShapeAccess().getShapeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__1__Impl
	rule__Shape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getShapeKeyword_1()); }
	'shape'
	{ after(grammarAccess.getShapeAccess().getShapeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__2__Impl
	rule__Shape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getShapeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__3__Impl
	rule__Shape__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getNameAssignment_3()); }
	(rule__Shape__NameAssignment_3)
	{ after(grammarAccess.getShapeAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__4__Impl
	rule__Shape__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getContainerAssignment_4()); }
	(rule__Shape__ContainerAssignment_4)?
	{ after(grammarAccess.getShapeAccess().getContainerAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__5__Impl
	rule__Shape__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getRenderKeyword_5()); }
	'render'
	{ after(grammarAccess.getShapeAccess().getRenderKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__6__Impl
	rule__Shape__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getShapeAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__7__Impl
	rule__Shape__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getTypeAssignment_7()); }
	(rule__Shape__TypeAssignment_7)
	{ after(grammarAccess.getShapeAccess().getTypeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__8__Impl
	rule__Shape__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getRepresentsAssignment_8()); }
	(rule__Shape__RepresentsAssignment_8)
	{ after(grammarAccess.getShapeAccess().getRepresentsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__9__Impl
	rule__Shape__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getBoundsAssignment_9()); }
	(rule__Shape__BoundsAssignment_9)
	{ after(grammarAccess.getShapeAccess().getBoundsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getTextAssignment_10()); }
	(rule__Shape__TextAssignment_10)?
	{ after(grammarAccess.getShapeAccess().getTextAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingTexts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__0__Impl
	rule__FloatingTexts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getFloatingTextsAction_0()); }
	()
	{ after(grammarAccess.getFloatingTextsAccess().getFloatingTextsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__1__Impl
	rule__FloatingTexts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getTextsKeyword_1()); }
	'texts'
	{ after(grammarAccess.getFloatingTextsAccess().getTextsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__2__Impl
	rule__FloatingTexts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFloatingTextsAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingTexts__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextsAccess().getTextsAssignment_3()); }
	(rule__FloatingTexts__TextsAssignment_3)*
	{ after(grammarAccess.getFloatingTextsAccess().getTextsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__0__Impl
	rule__FloatingText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getFloatingTextAction_0()); }
	()
	{ after(grammarAccess.getFloatingTextAccess().getFloatingTextAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__1__Impl
	rule__FloatingText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getTextKeyword_1()); }
	'text'
	{ after(grammarAccess.getFloatingTextAccess().getTextKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__2__Impl
	rule__FloatingText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFloatingTextAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__3__Impl
	rule__FloatingText__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getBoundsAssignment_3()); }
	(rule__FloatingText__BoundsAssignment_3)
	{ after(grammarAccess.getFloatingTextAccess().getBoundsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingText__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingTextAccess().getEndAssignment_4()); }
	(rule__FloatingText__EndAssignment_4)
	{ after(grammarAccess.getFloatingTextAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumEnd__Group__0__Impl
	rule__EnumEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumEndAccess().getWhereKeyword_0()); }
	'where'
	{ after(grammarAccess.getEnumEndAccess().getWhereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumEnd__Group__1__Impl
	rule__EnumEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumEndAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getEnumEndAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumEnd__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumEndAccess().getWhereAssignment_2()); }
	(rule__EnumEnd__WhereAssignment_2)
	{ after(grammarAccess.getEnumEndAccess().getWhereAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connectors__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__0__Impl
	rule__Connectors__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getConnectorsAction_0()); }
	()
	{ after(grammarAccess.getConnectorsAccess().getConnectorsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__1__Impl
	rule__Connectors__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getConnectorsKeyword_1()); }
	'connectors'
	{ after(grammarAccess.getConnectorsAccess().getConnectorsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__2__Impl
	rule__Connectors__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getConnectorsAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connectors__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorsAccess().getConnectorsAssignment_3()); }
	(rule__Connectors__ConnectorsAssignment_3)*
	{ after(grammarAccess.getConnectorsAccess().getConnectorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorKeyword_0()); }
	'connector'
	{ after(grammarAccess.getConnectorAccess().getConnectorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConnectorAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getNameAssignment_2()); }
	(rule__Connector__NameAssignment_2)
	{ after(grammarAccess.getConnectorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__3__Impl
	rule__Connector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getRenderKeyword_3()); }
	'render'
	{ after(grammarAccess.getConnectorAccess().getRenderKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__4__Impl
	rule__Connector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getConnectorAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__5__Impl
	rule__Connector__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTypeAssignment_5()); }
	(rule__Connector__TypeAssignment_5)
	{ after(grammarAccess.getConnectorAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__6__Impl
	rule__Connector__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getRepresentsAssignment_6()); }
	(rule__Connector__RepresentsAssignment_6)
	{ after(grammarAccess.getConnectorAccess().getRepresentsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__7__Impl
	rule__Connector__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getPolylineAssignment_7()); }
	(rule__Connector__PolylineAssignment_7)
	{ after(grammarAccess.getConnectorAccess().getPolylineAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__8__Impl
	rule__Connector__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAnchorsAssignment_8()); }
	(rule__Connector__AnchorsAssignment_8)?
	{ after(grammarAccess.getConnectorAccess().getAnchorsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTextsAssignment_9()); }
	(rule__Connector__TextsAssignment_9)
	{ after(grammarAccess.getConnectorAccess().getTextsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Anchors__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__0__Impl
	rule__Anchors__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getAnchorsKeyword_0()); }
	'anchors'
	{ after(grammarAccess.getAnchorsAccess().getAnchorsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__1__Impl
	rule__Anchors__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAnchorsAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__2__Impl
	rule__Anchors__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getStartAnchorAssignment_2()); }
	(rule__Anchors__StartAnchorAssignment_2)
	{ after(grammarAccess.getAnchorsAccess().getStartAnchorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anchors__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnchorsAccess().getEndAnchorAssignment_3()); }
	(rule__Anchors__EndAnchorAssignment_3)
	{ after(grammarAccess.getAnchorsAccess().getEndAnchorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartAnchor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__0__Impl
	rule__StartAnchor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getStartKeyword_0()); }
	'start'
	{ after(grammarAccess.getStartAnchorAccess().getStartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__1__Impl
	rule__StartAnchor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getStartAnchorAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__2__Impl
	rule__StartAnchor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getPointAssignment_2()); }
	(rule__StartAnchor__PointAssignment_2)
	{ after(grammarAccess.getStartAnchorAccess().getPointAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartAnchor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAnchorAccess().getAnchorAssignment_3()); }
	(rule__StartAnchor__AnchorAssignment_3)?
	{ after(grammarAccess.getStartAnchorAccess().getAnchorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndAnchor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__0__Impl
	rule__EndAnchor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getEndKeyword_0()); }
	'end'
	{ after(grammarAccess.getEndAnchorAccess().getEndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__1__Impl
	rule__EndAnchor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getEndAnchorAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__2__Impl
	rule__EndAnchor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getPointAssignment_2()); }
	(rule__EndAnchor__PointAssignment_2)
	{ after(grammarAccess.getEndAnchorAccess().getPointAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndAnchor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAnchorAccess().getAnchorAssignment_3()); }
	(rule__EndAnchor__AnchorAssignment_3)?
	{ after(grammarAccess.getEndAnchorAccess().getAnchorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeAnchorElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group__0__Impl
	rule__ShapeAnchorElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getShapeKeyword_0()); }
	'shape'
	{ after(grammarAccess.getShapeAnchorElementAccess().getShapeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group__1__Impl
	rule__ShapeAnchorElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getShapeAnchorElementAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeAnchorElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAnchorElementAccess().getElementAssignment_2()); }
	(rule__ShapeAnchorElement__ElementAssignment_2)
	{ after(grammarAccess.getShapeAnchorElementAccess().getElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorAnchorElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group__0__Impl
	rule__ConnectorAnchorElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getConnectorKeyword_0()); }
	'connector'
	{ after(grammarAccess.getConnectorAnchorElementAccess().getConnectorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group__1__Impl
	rule__ConnectorAnchorElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConnectorAnchorElementAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorAnchorElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAnchorElementAccess().getElementAssignment_2()); }
	(rule__ConnectorAnchorElement__ElementAssignment_2)
	{ after(grammarAccess.getConnectorAnchorElementAccess().getElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polyline__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__0__Impl
	rule__Polyline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getPolylineAction_0()); }
	()
	{ after(grammarAccess.getPolylineAccess().getPolylineAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__1__Impl
	rule__Polyline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getPolylineKeyword_1()); }
	'polyline'
	{ after(grammarAccess.getPolylineAccess().getPolylineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__2__Impl
	rule__Polyline__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPolylineAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polyline__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolylineAccess().getSegmentsAssignment_3()); }
	(rule__Polyline__SegmentsAssignment_3)*
	{ after(grammarAccess.getPolylineAccess().getSegmentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Segment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__0__Impl
	rule__Segment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getSegmentKeyword_0()); }
	'segment'
	{ after(grammarAccess.getSegmentAccess().getSegmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__1__Impl
	rule__Segment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSegmentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__2__Impl
	rule__Segment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getStartKeyword_2()); }
	'start'
	{ after(grammarAccess.getSegmentAccess().getStartKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__3__Impl
	rule__Segment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getSegmentAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__4__Impl
	rule__Segment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getStartPointAssignment_4()); }
	(rule__Segment__StartPointAssignment_4)
	{ after(grammarAccess.getSegmentAccess().getStartPointAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__5__Impl
	rule__Segment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getSegmentAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__6__Impl
	rule__Segment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getSegmentAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Segment__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSegmentAccess().getEndPointAssignment_7()); }
	(rule__Segment__EndPointAssignment_7)
	{ after(grammarAccess.getSegmentAccess().getEndPointAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXKeyword_0()); }
	'x'
	{ after(grammarAccess.getPointAccess().getXKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPointAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXAssignment_2()); }
	(rule__Point__XAssignment_2)
	{ after(grammarAccess.getPointAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__3__Impl
	rule__Point__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYKeyword_3()); }
	'y'
	{ after(grammarAccess.getPointAccess().getYKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__4__Impl
	rule__Point__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getPointAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYAssignment_5()); }
	(rule__Point__YAssignment_5)
	{ after(grammarAccess.getPointAccess().getYAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__0__Impl
	rule__PointDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getPointKeyword_0()); }
	'point'
	{ after(grammarAccess.getPointDefinitionAccess().getPointKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__1__Impl
	rule__PointDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPointDefinitionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__2__Impl
	rule__PointDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getXKeyword_2()); }
	'x'
	{ after(grammarAccess.getPointDefinitionAccess().getXKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__3__Impl
	rule__PointDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getPointDefinitionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__4__Impl
	rule__PointDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getXAssignment_4()); }
	(rule__PointDefinition__XAssignment_4)
	{ after(grammarAccess.getPointDefinitionAccess().getXAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__5__Impl
	rule__PointDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getYKeyword_5()); }
	'y'
	{ after(grammarAccess.getPointDefinitionAccess().getYKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__6__Impl
	rule__PointDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getPointDefinitionAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointDefinitionAccess().getYAssignment_7()); }
	(rule__PointDefinition__YAssignment_7)
	{ after(grammarAccess.getPointDefinitionAccess().getYAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bounds__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__0__Impl
	rule__Bounds__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getBoundsKeyword_0()); }
	'bounds'
	{ after(grammarAccess.getBoundsAccess().getBoundsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__1__Impl
	rule__Bounds__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBoundsAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__2__Impl
	rule__Bounds__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getXKeyword_2()); }
	'x'
	{ after(grammarAccess.getBoundsAccess().getXKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__3__Impl
	rule__Bounds__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getBoundsAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__4__Impl
	rule__Bounds__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getXAssignment_4()); }
	(rule__Bounds__XAssignment_4)
	{ after(grammarAccess.getBoundsAccess().getXAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__5__Impl
	rule__Bounds__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getYKeyword_5()); }
	'y'
	{ after(grammarAccess.getBoundsAccess().getYKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__6__Impl
	rule__Bounds__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getBoundsAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__7__Impl
	rule__Bounds__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getYAssignment_7()); }
	(rule__Bounds__YAssignment_7)
	{ after(grammarAccess.getBoundsAccess().getYAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__8__Impl
	rule__Bounds__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getWidthKeyword_8()); }
	'width'
	{ after(grammarAccess.getBoundsAccess().getWidthKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__9__Impl
	rule__Bounds__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getColonKeyword_9()); }
	':'
	{ after(grammarAccess.getBoundsAccess().getColonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__10__Impl
	rule__Bounds__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getWAssignment_10()); }
	(rule__Bounds__WAssignment_10)
	{ after(grammarAccess.getBoundsAccess().getWAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__11__Impl
	rule__Bounds__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getHeightKeyword_11()); }
	'height'
	{ after(grammarAccess.getBoundsAccess().getHeightKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__12__Impl
	rule__Bounds__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getColonKeyword_12()); }
	':'
	{ after(grammarAccess.getBoundsAccess().getColonKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bounds__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundsAccess().getHAssignment_13()); }
	(rule__Bounds__HAssignment_13)
	{ after(grammarAccess.getBoundsAccess().getHAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__RenderAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRenderModelRenderParserRuleCall_0_0()); }
		ruleModelRender
		{ after(grammarAccess.getModelAccess().getRenderModelRenderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PropertiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPropertiesModelPropertiesParserRuleCall_1_0()); }
		ruleModelProperties
		{ after(grammarAccess.getModelAccess().getPropertiesModelPropertiesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsGraphicalElementParserRuleCall_2_0()); }
		ruleGraphicalElement
		{ after(grammarAccess.getModelAccess().getElementsGraphicalElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelRender__ImportURIAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelRenderAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelRenderAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__PointAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getPointPointParserRuleCall_4_0()); }
		rulePoint
		{ after(grammarAccess.getModelPropertiesAccess().getPointPointParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperties__ZoomAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPropertiesAccess().getZoomINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getModelPropertiesAccess().getZoomINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shapes__ShapesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapesAccess().getShapesShapeParserRuleCall_3_0()); }
		ruleShape
		{ after(grammarAccess.getShapesAccess().getShapesShapeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getShapeAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__ContainerAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getContainerContainerParserRuleCall_4_0()); }
		ruleContainer
		{ after(grammarAccess.getShapeAccess().getContainerContainerParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__TypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getTypeTypeLabelParserRuleCall_7_0()); }
		ruleTypeLabel
		{ after(grammarAccess.getShapeAccess().getTypeTypeLabelParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__RepresentsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getRepresentsSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getShapeAccess().getRepresentsSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__BoundsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getBoundsBoundsParserRuleCall_9_0()); }
		ruleBounds
		{ after(grammarAccess.getShapeAccess().getBoundsBoundsParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__TextAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getTextFloatingTextParserRuleCall_10_0()); }
		ruleFloatingText
		{ after(grammarAccess.getShapeAccess().getTextFloatingTextParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingTexts__TextsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextsAccess().getTextsFloatingTextParserRuleCall_3_0()); }
		ruleFloatingText
		{ after(grammarAccess.getFloatingTextsAccess().getTextsFloatingTextParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__BoundsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextAccess().getBoundsBoundsParserRuleCall_3_0()); }
		ruleBounds
		{ after(grammarAccess.getFloatingTextAccess().getBoundsBoundsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingText__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTextAccess().getEndEnumEndParserRuleCall_4_0()); }
		ruleEnumEnd
		{ after(grammarAccess.getFloatingTextAccess().getEndEnumEndParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumEnd__WhereAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumEndAccess().getWhereAlternatives_2_0()); }
		(rule__EnumEnd__WhereAlternatives_2_0)
		{ after(grammarAccess.getEnumEndAccess().getWhereAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connectors__ConnectorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorsAccess().getConnectorsConnectorParserRuleCall_3_0()); }
		ruleConnector
		{ after(grammarAccess.getConnectorsAccess().getConnectorsConnectorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getTypeTypeLabelParserRuleCall_5_0()); }
		ruleTypeLabel
		{ after(grammarAccess.getConnectorAccess().getTypeTypeLabelParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__RepresentsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getRepresentsSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getConnectorAccess().getRepresentsSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__PolylineAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getPolylinePolylineParserRuleCall_7_0()); }
		rulePolyline
		{ after(grammarAccess.getConnectorAccess().getPolylinePolylineParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__AnchorsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getAnchorsAnchorsParserRuleCall_8_0()); }
		ruleAnchors
		{ after(grammarAccess.getConnectorAccess().getAnchorsAnchorsParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__TextsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getTextsFloatingTextsParserRuleCall_9_0()); }
		ruleFloatingTexts
		{ after(grammarAccess.getConnectorAccess().getTextsFloatingTextsParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__StartAnchorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorsAccess().getStartAnchorStartAnchorParserRuleCall_2_0()); }
		ruleStartAnchor
		{ after(grammarAccess.getAnchorsAccess().getStartAnchorStartAnchorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anchors__EndAnchorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnchorsAccess().getEndAnchorEndAnchorParserRuleCall_3_0()); }
		ruleEndAnchor
		{ after(grammarAccess.getAnchorsAccess().getEndAnchorEndAnchorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__PointAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAnchorAccess().getPointPointDefinitionParserRuleCall_2_0()); }
		rulePointDefinition
		{ after(grammarAccess.getStartAnchorAccess().getPointPointDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartAnchor__AnchorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAnchorAccess().getAnchorAnchorParserRuleCall_3_0()); }
		ruleAnchor
		{ after(grammarAccess.getStartAnchorAccess().getAnchorAnchorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__PointAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAnchorAccess().getPointPointDefinitionParserRuleCall_2_0()); }
		rulePointDefinition
		{ after(grammarAccess.getEndAnchorAccess().getPointPointDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndAnchor__AnchorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAnchorAccess().getAnchorAnchorParserRuleCall_3_0()); }
		ruleAnchor
		{ after(grammarAccess.getEndAnchorAccess().getAnchorAnchorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeAnchorElement__ElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAnchorElementAccess().getElementShapeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getShapeAnchorElementAccess().getElementShapeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getShapeAnchorElementAccess().getElementShapeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getShapeAnchorElementAccess().getElementShapeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorAnchorElement__ElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConnectorAnchorElementAccess().getElementConnectorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__SegmentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolylineAccess().getSegmentsSegmentParserRuleCall_3_0()); }
		ruleSegment
		{ after(grammarAccess.getPolylineAccess().getSegmentsSegmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__StartPointAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSegmentAccess().getStartPointPointParserRuleCall_4_0()); }
		rulePoint
		{ after(grammarAccess.getSegmentAccess().getStartPointPointParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Segment__EndPointAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSegmentAccess().getEndPointPointParserRuleCall_7_0()); }
		rulePoint
		{ after(grammarAccess.getSegmentAccess().getEndPointPointParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getXINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPointAccess().getXINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getYINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getPointAccess().getYINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__XAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDefinitionAccess().getXINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getPointDefinitionAccess().getXINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointDefinition__YAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointDefinitionAccess().getYINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getPointDefinitionAccess().getYINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__XAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundsAccess().getXINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundsAccess().getXINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__YAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundsAccess().getYINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundsAccess().getYINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__WAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundsAccess().getWINTTerminalRuleCall_10_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundsAccess().getWINTTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bounds__HAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundsAccess().getHINTTerminalRuleCall_13_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundsAccess().getHINTTerminalRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
