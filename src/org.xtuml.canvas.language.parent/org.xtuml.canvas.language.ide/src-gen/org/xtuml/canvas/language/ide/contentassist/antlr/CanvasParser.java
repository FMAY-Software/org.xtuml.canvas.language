/*
 * generated by Xtext 2.22.0
 */
package org.xtuml.canvas.language.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtuml.canvas.language.ide.contentassist.antlr.internal.InternalCanvasParser;
import org.xtuml.canvas.language.services.CanvasGrammarAccess;

public class CanvasParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CanvasGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CanvasGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getGraphicalElementAccess().getAlternatives(), "rule__GraphicalElement__Alternatives");
			builder.put(grammarAccess.getEnumEndAccess().getWhereAlternatives_2_0(), "rule__EnumEnd__WhereAlternatives_2_0");
			builder.put(grammarAccess.getAnchorAccess().getAlternatives(), "rule__Anchor__Alternatives");
			builder.put(grammarAccess.getOOATypeAccess().getAlternatives(), "rule__OOAType__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getModelRenderAccess().getGroup(), "rule__ModelRender__Group__0");
			builder.put(grammarAccess.getModelPropertiesAccess().getGroup(), "rule__ModelProperties__Group__0");
			builder.put(grammarAccess.getShapesAccess().getGroup(), "rule__Shapes__Group__0");
			builder.put(grammarAccess.getShapeAccess().getGroup(), "rule__Shape__Group__0");
			builder.put(grammarAccess.getFloatingTextsAccess().getGroup(), "rule__FloatingTexts__Group__0");
			builder.put(grammarAccess.getFloatingTextAccess().getGroup(), "rule__FloatingText__Group__0");
			builder.put(grammarAccess.getEnumEndAccess().getGroup(), "rule__EnumEnd__Group__0");
			builder.put(grammarAccess.getConnectorsAccess().getGroup(), "rule__Connectors__Group__0");
			builder.put(grammarAccess.getConnectorAccess().getGroup(), "rule__Connector__Group__0");
			builder.put(grammarAccess.getAnchorsAccess().getGroup(), "rule__Anchors__Group__0");
			builder.put(grammarAccess.getStartAnchorAccess().getGroup(), "rule__StartAnchor__Group__0");
			builder.put(grammarAccess.getEndAnchorAccess().getGroup(), "rule__EndAnchor__Group__0");
			builder.put(grammarAccess.getShapeAnchorElementAccess().getGroup(), "rule__ShapeAnchorElement__Group__0");
			builder.put(grammarAccess.getConnectorAnchorElementAccess().getGroup(), "rule__ConnectorAnchorElement__Group__0");
			builder.put(grammarAccess.getPolylineAccess().getGroup(), "rule__Polyline__Group__0");
			builder.put(grammarAccess.getSegmentAccess().getGroup(), "rule__Segment__Group__0");
			builder.put(grammarAccess.getPointAccess().getGroup(), "rule__Point__Group__0");
			builder.put(grammarAccess.getPointDefinitionAccess().getGroup(), "rule__PointDefinition__Group__0");
			builder.put(grammarAccess.getBoundsAccess().getGroup(), "rule__Bounds__Group__0");
			builder.put(grammarAccess.getModelAccess().getRenderAssignment_0(), "rule__Model__RenderAssignment_0");
			builder.put(grammarAccess.getModelAccess().getPropertiesAssignment_1(), "rule__Model__PropertiesAssignment_1");
			builder.put(grammarAccess.getModelAccess().getElementsAssignment_2(), "rule__Model__ElementsAssignment_2");
			builder.put(grammarAccess.getModelRenderAccess().getImportURIAssignment_2(), "rule__ModelRender__ImportURIAssignment_2");
			builder.put(grammarAccess.getModelPropertiesAccess().getPointAssignment_4(), "rule__ModelProperties__PointAssignment_4");
			builder.put(grammarAccess.getModelPropertiesAccess().getZoomAssignment_7(), "rule__ModelProperties__ZoomAssignment_7");
			builder.put(grammarAccess.getShapesAccess().getShapesAssignment_3(), "rule__Shapes__ShapesAssignment_3");
			builder.put(grammarAccess.getShapeAccess().getNameAssignment_3(), "rule__Shape__NameAssignment_3");
			builder.put(grammarAccess.getShapeAccess().getContainerAssignment_4(), "rule__Shape__ContainerAssignment_4");
			builder.put(grammarAccess.getShapeAccess().getTypeAssignment_7(), "rule__Shape__TypeAssignment_7");
			builder.put(grammarAccess.getShapeAccess().getRepresentsAssignment_8(), "rule__Shape__RepresentsAssignment_8");
			builder.put(grammarAccess.getShapeAccess().getBoundsAssignment_9(), "rule__Shape__BoundsAssignment_9");
			builder.put(grammarAccess.getShapeAccess().getTextAssignment_10(), "rule__Shape__TextAssignment_10");
			builder.put(grammarAccess.getFloatingTextsAccess().getTextsAssignment_3(), "rule__FloatingTexts__TextsAssignment_3");
			builder.put(grammarAccess.getFloatingTextAccess().getBoundsAssignment_3(), "rule__FloatingText__BoundsAssignment_3");
			builder.put(grammarAccess.getFloatingTextAccess().getEndAssignment_4(), "rule__FloatingText__EndAssignment_4");
			builder.put(grammarAccess.getEnumEndAccess().getWhereAssignment_2(), "rule__EnumEnd__WhereAssignment_2");
			builder.put(grammarAccess.getConnectorsAccess().getConnectorsAssignment_3(), "rule__Connectors__ConnectorsAssignment_3");
			builder.put(grammarAccess.getConnectorAccess().getNameAssignment_2(), "rule__Connector__NameAssignment_2");
			builder.put(grammarAccess.getConnectorAccess().getTypeAssignment_5(), "rule__Connector__TypeAssignment_5");
			builder.put(grammarAccess.getConnectorAccess().getRepresentsAssignment_6(), "rule__Connector__RepresentsAssignment_6");
			builder.put(grammarAccess.getConnectorAccess().getPolylineAssignment_7(), "rule__Connector__PolylineAssignment_7");
			builder.put(grammarAccess.getConnectorAccess().getAnchorsAssignment_8(), "rule__Connector__AnchorsAssignment_8");
			builder.put(grammarAccess.getConnectorAccess().getTextsAssignment_9(), "rule__Connector__TextsAssignment_9");
			builder.put(grammarAccess.getAnchorsAccess().getStartAnchorAssignment_2(), "rule__Anchors__StartAnchorAssignment_2");
			builder.put(grammarAccess.getAnchorsAccess().getEndAnchorAssignment_3(), "rule__Anchors__EndAnchorAssignment_3");
			builder.put(grammarAccess.getStartAnchorAccess().getPointAssignment_2(), "rule__StartAnchor__PointAssignment_2");
			builder.put(grammarAccess.getStartAnchorAccess().getAnchorAssignment_3(), "rule__StartAnchor__AnchorAssignment_3");
			builder.put(grammarAccess.getEndAnchorAccess().getPointAssignment_2(), "rule__EndAnchor__PointAssignment_2");
			builder.put(grammarAccess.getEndAnchorAccess().getAnchorAssignment_3(), "rule__EndAnchor__AnchorAssignment_3");
			builder.put(grammarAccess.getShapeAnchorElementAccess().getElementAssignment_2(), "rule__ShapeAnchorElement__ElementAssignment_2");
			builder.put(grammarAccess.getConnectorAnchorElementAccess().getElementAssignment_2(), "rule__ConnectorAnchorElement__ElementAssignment_2");
			builder.put(grammarAccess.getPolylineAccess().getSegmentsAssignment_3(), "rule__Polyline__SegmentsAssignment_3");
			builder.put(grammarAccess.getSegmentAccess().getStartPointAssignment_4(), "rule__Segment__StartPointAssignment_4");
			builder.put(grammarAccess.getSegmentAccess().getEndPointAssignment_7(), "rule__Segment__EndPointAssignment_7");
			builder.put(grammarAccess.getPointAccess().getXAssignment_2(), "rule__Point__XAssignment_2");
			builder.put(grammarAccess.getPointAccess().getYAssignment_5(), "rule__Point__YAssignment_5");
			builder.put(grammarAccess.getPointDefinitionAccess().getXAssignment_4(), "rule__PointDefinition__XAssignment_4");
			builder.put(grammarAccess.getPointDefinitionAccess().getYAssignment_7(), "rule__PointDefinition__YAssignment_7");
			builder.put(grammarAccess.getBoundsAccess().getXAssignment_4(), "rule__Bounds__XAssignment_4");
			builder.put(grammarAccess.getBoundsAccess().getYAssignment_7(), "rule__Bounds__YAssignment_7");
			builder.put(grammarAccess.getBoundsAccess().getWAssignment_10(), "rule__Bounds__WAssignment_10");
			builder.put(grammarAccess.getBoundsAccess().getHAssignment_13(), "rule__Bounds__HAssignment_13");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CanvasGrammarAccess grammarAccess;

	@Override
	protected InternalCanvasParser createParser() {
		InternalCanvasParser result = new InternalCanvasParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CanvasGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CanvasGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
