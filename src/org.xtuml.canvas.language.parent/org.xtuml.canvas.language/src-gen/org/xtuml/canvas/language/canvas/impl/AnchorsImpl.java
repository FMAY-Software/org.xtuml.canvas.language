/**
 * generated by Xtext 2.22.0
 */
package org.xtuml.canvas.language.canvas.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtuml.canvas.language.canvas.Anchors;
import org.xtuml.canvas.language.canvas.CanvasPackage;
import org.xtuml.canvas.language.canvas.EndAnchor;
import org.xtuml.canvas.language.canvas.StartAnchor;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Anchors</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.canvas.language.canvas.impl.AnchorsImpl#getStartAnchor <em>Start Anchor</em>}</li>
 *   <li>{@link org.xtuml.canvas.language.canvas.impl.AnchorsImpl#getEndAnchor <em>End Anchor</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AnchorsImpl extends MinimalEObjectImpl.Container implements Anchors
{
  /**
   * The cached value of the '{@link #getStartAnchor() <em>Start Anchor</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartAnchor()
   * @generated
   * @ordered
   */
  protected StartAnchor startAnchor;

  /**
   * The cached value of the '{@link #getEndAnchor() <em>End Anchor</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndAnchor()
   * @generated
   * @ordered
   */
  protected EndAnchor endAnchor;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnchorsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CanvasPackage.Literals.ANCHORS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StartAnchor getStartAnchor()
  {
    return startAnchor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStartAnchor(StartAnchor newStartAnchor, NotificationChain msgs)
  {
    StartAnchor oldStartAnchor = startAnchor;
    startAnchor = newStartAnchor;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CanvasPackage.ANCHORS__START_ANCHOR, oldStartAnchor, newStartAnchor);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStartAnchor(StartAnchor newStartAnchor)
  {
    if (newStartAnchor != startAnchor)
    {
      NotificationChain msgs = null;
      if (startAnchor != null)
        msgs = ((InternalEObject)startAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CanvasPackage.ANCHORS__START_ANCHOR, null, msgs);
      if (newStartAnchor != null)
        msgs = ((InternalEObject)newStartAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CanvasPackage.ANCHORS__START_ANCHOR, null, msgs);
      msgs = basicSetStartAnchor(newStartAnchor, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanvasPackage.ANCHORS__START_ANCHOR, newStartAnchor, newStartAnchor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EndAnchor getEndAnchor()
  {
    return endAnchor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEndAnchor(EndAnchor newEndAnchor, NotificationChain msgs)
  {
    EndAnchor oldEndAnchor = endAnchor;
    endAnchor = newEndAnchor;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CanvasPackage.ANCHORS__END_ANCHOR, oldEndAnchor, newEndAnchor);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndAnchor(EndAnchor newEndAnchor)
  {
    if (newEndAnchor != endAnchor)
    {
      NotificationChain msgs = null;
      if (endAnchor != null)
        msgs = ((InternalEObject)endAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CanvasPackage.ANCHORS__END_ANCHOR, null, msgs);
      if (newEndAnchor != null)
        msgs = ((InternalEObject)newEndAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CanvasPackage.ANCHORS__END_ANCHOR, null, msgs);
      msgs = basicSetEndAnchor(newEndAnchor, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CanvasPackage.ANCHORS__END_ANCHOR, newEndAnchor, newEndAnchor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CanvasPackage.ANCHORS__START_ANCHOR:
        return basicSetStartAnchor(null, msgs);
      case CanvasPackage.ANCHORS__END_ANCHOR:
        return basicSetEndAnchor(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CanvasPackage.ANCHORS__START_ANCHOR:
        return getStartAnchor();
      case CanvasPackage.ANCHORS__END_ANCHOR:
        return getEndAnchor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CanvasPackage.ANCHORS__START_ANCHOR:
        setStartAnchor((StartAnchor)newValue);
        return;
      case CanvasPackage.ANCHORS__END_ANCHOR:
        setEndAnchor((EndAnchor)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CanvasPackage.ANCHORS__START_ANCHOR:
        setStartAnchor((StartAnchor)null);
        return;
      case CanvasPackage.ANCHORS__END_ANCHOR:
        setEndAnchor((EndAnchor)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CanvasPackage.ANCHORS__START_ANCHOR:
        return startAnchor != null;
      case CanvasPackage.ANCHORS__END_ANCHOR:
        return endAnchor != null;
    }
    return super.eIsSet(featureID);
  }

} //AnchorsImpl
